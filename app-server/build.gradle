buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
		queryDslVersion = '4.2.0' /* QueryDSL */
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.seran'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

bootJar {
	mainClassName = 'com.seran.AppServerApplication'
}


dependencies {
	
	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    
    /* Security Tool */
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security:spring-security-jwt:1.0.9.RELEASE')
    compile('com.auth0:java-jwt:3.4.0')
    
    /* Data-processing Tool */
    compile('com.fasterxml.jackson.core:jackson-databind')
	compile('org.assertj:assertj-core:3.10.0')
	compile('org.json:json:20180130')
	
	/* QueryDSL : unified queries tool */
	compile group: 'com.querydsl', name: 'querydsl-core', version: queryDslVersion
    compile group: 'com.querydsl', name: 'querydsl-jpa', version: queryDslVersion
    compile group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion
    
    /* Lombok */
    compileOnly('org.projectlombok:lombok:1.16.18')
    
    /* MySQL connection Tool */
    runtime('mysql:mysql-connector-java')
    
    /* Test Tool */
    testCompile('org.springframework.boot:spring-boot-starter-test')
	
}

/*
 *  QueryDSL Configuration
 */
 
// The path of created QueryDSL file
sourceSets {
	generated {
		java {
			srcDirs = [
				'src/main/java'
				, 'src/main/querydsl_generated'
			]
		}
	}
}

configurations {
	querydslapt
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Query dsl Generator') {
	// The path of JPA entity file
	source = sourceSets.main.java
	
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [
			"-proc:only"
			, "-processor"
			, "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	options.encoding = 'UTF-8'
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}

compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

// IDEA config
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
        sourceDirs += file('src/main/querydsl_generated')
    }
}

// gradle clean config
clean {
	delete sourceSets.generated.java.srcDirs.iterator().next()
}